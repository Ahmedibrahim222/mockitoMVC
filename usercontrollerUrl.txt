Get all users (GET) 	http://localhost:8080/users
Get specific user (GET)	http://localhost:8080/users/userID   ---> UserId is a path parameter
Get all users in specific page(GET)  http://localhost:8080/users?page=1&limit=50  --> query parameter


-------------------------------------------------------------------------------------------

package com.CountryServices.demo.services;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.springframework.stereotype.Component;

import com.CountryServices.demo.beans.Country;
import com.CountryServices.demo.controllers.AddResponse;

@Component
public class CountryService {
	
	static HashMap<Integer, Country> countryIdMap;
	
	public CountryService() {
		
		countryIdMap = new HashMap<Integer, Country>();
		
		Country indiaCountry = new Country(1, "India", "Delhi");
		Country usaCountry = new Country(2, "USA", "Washington");
		Country ukCountry = new Country(3, "UK", "London");
		
		countryIdMap.put(1, indiaCountry);
		countryIdMap.put(2, usaCountry);
		countryIdMap.put(3, ukCountry);
	}
	
	public List getAllCountries() {
		
		List countries = new ArrayList(countryIdMap.values());
		return countries;
	}
	
	public Country getCountrybyID(int id) {
		
		Country country = countryIdMap.get(id);
		return country;
	}
	
	public Country getCountrybyName(String countryName) {
		
		Country country = null;
		for(int i:countryIdMap.keySet())
		{
			if(countryIdMap.get(i).getCountryName().equals(countryName))
				country=countryIdMap.get(i);
		}
		return country;
	}
	
	public Country addCountry(Country country) {
		
		country.setId(getMaxId());
		countryIdMap.put(country.getId(), country);
		return country;
		
	}
	
	//Utility method to get max id
	public static int getMaxId() {
		
		int max = 0;
		for (int id:countryIdMap.keySet())
			if(max<=id)
				max=id;
		return max+1;
	}
	
	public Country updateCountry(Country country) {
		
		if(country.getId()>0)
			countryIdMap.put(country.getId(), country);
		return country;
	}
	
	public AddResponse deleteCountry(int id) {
		
		countryIdMap.remove(id);
		AddResponse res = new AddResponse();
		res.setMsg("Country deleted...");
		res.setId(id);
		return res;
		
	}


}

--------------------------------------------------------------------------------


package com.CountryServices.demo.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.CountryServices.demo.beans.Country;
import com.CountryServices.demo.services.CountryService;

//this means whenever u send a request, it should come to this controller class
@RestController
public class CountryController {
	
	
	@Autowired
	CountryService countryService;
	
	@GetMapping("/getcountries")
	public List getCountries(){
		
		return countryService.getAllCountries();
		
	}
	
	//using @PathVariable bcuz it's a path parameter
	@GetMapping("/getcountries/{id}")
	public Country getCountriesById(@PathVariable(value="id") int id){
		
		return countryService.getCountrybyID(id);
		
	}
	
	//using @RequestParam bcuz it's a query parameter
	@GetMapping("/getcountries/countryname")
	public Country getCountriesByName(@RequestParam(value="name") String countryName){
		
		return countryService.getCountrybyName(countryName);
	}
	
	@PostMapping("/addcountry")
	public Country addCountry(@RequestBody Country country) {
		
		return countryService.addCountry(country);
		
	}
	
	@PutMapping("/updatecountry")
	public Country updateCountry(@RequestBody Country country) {
		
		return countryService.updateCountry(country);
		
	}
	
	@DeleteMapping("/deletecountry/{id}")
	public AddResponse deleteCountry(@PathVariable(value="id") int id) {
		
		return countryService.deleteCountry(id);
		
	}
}



 spring.datasource.url: jdbc: postgresql://localhost:5432/CountryService
 spring.datasource.username: postgres
 spring.datasource.password: password
 spring.datasource.driver-class-name: org.postgresql.Driver
 spring.jpa.hibernate.ddl-auto: none